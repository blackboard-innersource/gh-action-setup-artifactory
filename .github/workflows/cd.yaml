on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GIT_AUTHOR_NAME: github-actions[bot]
  GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
  GIT_COMMITTER_NAME: GitHub
  GIT_COMMITTER_EMAIL: noreply@github.com

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Unit tests
        run: make

  action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Run action
        uses: ./
        env:
          ARTIFACTORY_USERNAME: test_username
          ARTIFACTORY_TOKEN: test_token

      - name: Test .netrc exists
        run: test -f ~/.netrc && cat ~/.netrc

      - name: Test pip.conf exists
        run: test -f ~/.config/pip/pip.conf && cat ~/.config/pip/pip.conf

      - name: Test uv.toml exists
        run: test -f ~/.config/uv/uv.toml && cat ~/.config/uv/uv.toml

      - name: Test .npmrc exists
        run: test -f ~/.npmrc && cat ~/.npmrc

      - name: Test .yarnrc.yml exists
        run: test -f ~/.yarnrc.yml && cat ~/.yarnrc.yml

      - name: Test settings.xml exists
        run: test -f ~/.m2/settings.xml && cat ~/.m2/settings.xml

      - name: Test Setup JFrog
        shell: bash
        run: ./setup_jfrog.sh
        env:
          ARTIFACTORY_SETUP_JFROG: true
          ARTIFACTORY_JFROG_TEST: true

  cd:
    needs: [test, action]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.22"

      - name: Next tag info
        id: tag
        run: |
          go install github.com/caarlos0/svu@v1.12.0
          next=$(svu next --pattern 'v*.*.*')
          echo "current: $(svu current)"
          echo "next:    $next"
          echo "make=$(if [ "$next" = $(svu current) ]; then echo "0"; else echo "1"; fi)" >> $GITHUB_OUTPUT
          echo "next=$next" >> $GITHUB_OUTPUT
          echo ${next#"v"} > VERSION

      - name: Version
        id: version
        if: steps.tag.outputs.make == '1'
        uses: blackboard-innersource/gh-action-version-cat@v2

      - name: Create GitHub release
        if: steps.tag.outputs.make == '1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.version.outputs.version }} \
            --title ${{ steps.version.outputs.version }} \
            --generate-notes \
            --target ${{ github.sha }}

      - name: Checkout ${{ steps.version.outputs.version }}
        if: steps.tag.outputs.make == '1'
        uses: actions/checkout@v5
        with:
          ref: ${{ steps.version.outputs.version }}
          fetch-depth: 0

      # https://github.com/actions/toolkit/blob/master/docs/action-versioning.md
      - name: Tag and Push v${{ steps.version.outputs.major }}
        if: steps.tag.outputs.make == '1'
        run: |
          git tag -fa v${{ steps.version.outputs.major }} -m "Update v${{ steps.version.outputs.major }} tag"
          git push origin v${{ steps.version.outputs.major }} --force
